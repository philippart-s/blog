name: Jekyll site CI

on:
  pull_request:
    branches: [ master ]

jobs:
  check_site:
    name: Check if the site existe
    runs-on: ubuntu-latest
    outputs:
      site-created: ${{ steps.check_site.outputs.site-created }}
    steps:
      - id: check-site
      - name: Check site existance
        run: |
          ::set-output name=is-site-created::curl -s -o /dev/null --head -w "%{http_code}" -I -X GET -H "Authorization: Bearer ZZawBL8rkFx_YsPrcQbT6uJtt6zD5KgaBI2AIFuKuvQ" https://api.netlify.com/api/v1/sites\?name\='t${{github.head_ref}}'

  create_env:
    needs: check_site
    if: ${{needs.check_site.outputs.site-created != 200}}
    name: Site creation on netlify
    runs-on: ubuntu-latest
    outputs:
      site-id: ${{ steps.create-site.outputs.site-id }}
    steps:
      - id: create-site
      - name: Create Site
        run: |
          echo 'output: ${{needs.check_site.outputs.site-created}}'
          ::set-output name=site-id::curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.NETLIFY_AUTH_TOKEN }}" -d '{"name": "${{github.head_ref}}"}' https://api.netlify.com/api/v1/sites | jq --raw-output '.id'

  jekyll:
    needs: create_env
    name: Build and deploy Jekyll site
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Build
      uses: lemonarc/jekyll-action@1.0.0

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v1.1.13
      with:
        publish-dir: './_site'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions : ${{ github.event.pull_request.title }}"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
        alias: ${{ github.head_ref }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{needs.create_env.outputs.site-id}}
      timeout-minutes: 1